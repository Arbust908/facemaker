:root {
  // https://www.fluid-type-scale.com/calculate?minFontSize=16&minWidth=400&minRatio=1.25&maxFontSize=19&maxWidth=1280&maxRatio=1.333&steps=sm%2Cbase%2Cmd%2Clg%2Cxl%2Cxxl%2Cxxxl&baseStep=base&prefix=font-size&decimals=2&useRems=on&remValue=16&previewFont=Inter
  --font-size-sm: clamp(0.8rem, 0.17vw + 0.76rem, 0.89rem);
  --font-size-base: clamp(1rem, 0.34vw + 0.91rem, 1.19rem);
  --font-size-md: clamp(1.25rem, 0.61vw + 1.1rem, 1.58rem);
  --font-size-lg: clamp(1.56rem, 1vw + 1.31rem, 2.11rem);
  --font-size-xl: clamp(1.95rem, 1.56vw + 1.56rem, 2.81rem);
  --font-size-xxl: clamp(2.44rem, 2.38vw + 1.85rem, 3.75rem);
  --font-size-xxxl: clamp(3.05rem, 3.54vw + 2.17rem, 5rem);
}


// https://css-tricks.com/how-i-added-scroll-snapping-to-my-twitter-timeline/
html {
  color-scheme: light dark;
}
html.dark {
  color-scheme: dark;
}

.content {
  --gap: clamp(1rem, 6vw, 3rem);
  --full: minmax(var(--gap), 1fr);
  --content: min(50ch, 100% - var(--gap) * 2);
  --popout: minmax(0, 2rem);
  --feature: minmax(0, 5rem);

  display: grid;
  grid-template-columns:
    [full-start] var(--full)
    [feature-start] var(--feature)
    [popout-start] var(--popout)
    [content-start] var(--content) [content-end]
    var(--popout) [popout-end]
    var(--feature) [feature-end]
    var(--full) [full-end];
}

.content > * {
  grid-column: content;
}

.popout {
  grid-column: popout;
}

.feature {
  grid-column: feature;
}

.full {
  grid-column: full;
}

/* ---- Debug styles ---- */
.debug {
  position: fixed;
  top: 0;
  left: 0;
  grid-template-rows: 1fr;
  width: 100%;
  height: 100vh;
  mix-blend-mode: multiply;
  opacity: 0;
  transition: opacity 200ms ease-out;
}

.debug > * {
  --pseudo-offset: 0.25rem;
  position: relative;
  height: 100vh;
  grid-row: 1 / -1;
  border-radius: 0;
  border-inline: 1px dashed crimson;
}

.debug > *[class]::before,
.debug > *[class]::after {
  content: var(--column);
  writing-mode: vertical-lr;
  position: absolute;
  top: 50%;
  text-transform: uppercase;
  font-size: 0.8em;
  transform: translateY(-50%);
}

.debug > *::before {
  left: var(--pseudo-offset);
}

.debug > *::after {
  right: var(--pseudo-offset);
}

.debug > .popout {
  --column: "Popout";
}

.debug > .feature {
  --column: "Feature";
}

.debug > .full {
  --column: "Full";
}

[id="debug"],
[id="debug"] + label {
  position: relative;
  z-index: 1;
  cursor: pointer;
  user-select: none;
}

[id="debug"] {
  margin-block: 2rem;
  margin-inline-start: 1rem;
}

[id="debug"]:checked ~ .debug {
  opacity: 1;
}

/* ---- Other styles ---- */
* {
  box-sizing: border-box;
}

body {
  margin: 0 0 5rem;
  font-family: system-ui;
  font-size: 1.125rem;
}

:where(.content > *) {
  display: grid;
  place-items: center;
  height: 5rem;
  border-radius: 0.5rem;
  background-color: hotpink;
}

.content:not(.debug) * + * {
  margin-block-start: 1rem;
}

.popout {
  background-color: thistle;
}

.feature {
  background-color: paleturquoise;
}

.full {
  border-radius: unset;
  background-color: bisque;
}
